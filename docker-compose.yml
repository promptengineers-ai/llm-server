version: '3'

services:
  # Redis (Cache / Broker / Vector Index / Stream)
  # redis:
  #   container_name: redis
  #   restart: unless-stopped
  #   image: redis/redis-stack-server:latest
  #   ports:
  #     - 6379:6379
  #   volumes:
  #     - ./docker/redis/data:/data

  # Database (MySQL)
  # mysql:
  #   image: mysql:8.2.0
  #   container_name: mysql
  #   restart: unless-stopped
  #   ports:
  #     - "3306:3306"
  #   environment:
  #     MYSQL_ROOT_PASSWORD: password
  #     MYSQL_USER: admin
  #     MYSQL_PASSWORD: password
  #     MYSQL_DATABASE: llm_server
  #   volumes:
  #     - ./docker/mysql/data:/var/lib/mysql
      
  # # phpMyAdmin
  # phpmyadmin:
  #   image: phpmyadmin/phpmyadmin
  #   container_name: phpmyadmin
  #   restart: unless-stopped
  #   depends_on:
  #     - mysql
  #   ports:
  #     - "8081:80"
  #   environment:
  #     PMA_HOST: mysql
  #     MYSQL_ROOT_PASSWORD: password
  #     MYSQL_PASSWORD: password
  #     MYSQL_USER: admin

  # # SearXNG
  # searxng:
  #   image: searxng/searxng
  #   container_name: searxng
  #   restart: unless-stopped
  #   ports:
  #     - "8080:8080"
  #   volumes:
  #     - ./docker/searxng:/etc/searxng
  #   environment:
  #     BASE_URL: "http://localhost:8080/"
  #     INSTANCE_NAME: "my-instance"

  # Minio (File Storage) -- CURRENTLY ALL FILES AND IMAGES ARE BASE64 ENCODED
  # minio:
  #   image: minio/minio
  #   container_name: minio
  #   ports:
  #     - "9000:9000"
  #     - "9001:9001"
  #   environment:
  #     MINIO_ROOT_USER: CHANGEME
  #     MINIO_ROOT_PASSWORD: CHANGEME
  #   volumes:
  #     - ~/minio/data:/data
  #     - ~/minio/config:/root/.minio
  #   command: server /data --console-address ":9001"

  # # API
  api:
    container_name: api
    build:
      context: ./backend
      dockerfile: Dockerfile
    # volumes:
    #   - ./backend/data:/app/data  # Mount for SQLite database to host directory
    ports:
      - 8000:8000
    env_file:
      - ./backend/.env

  # # Proxy (Nginx)
  # nginx:
  #   image: nginx:latest
  #   container_name: nginx
  #   volumes:
  #     - ./docker/nginx:/etc/nginx/conf.d
  #   ports:
  #     - 80:80
  #     - 443:443
  #   depends_on:
  #     - api

  # OpenAI Whisper ASR Service
  # https://github.com/ahmetoner/whisper-asr-webservice/
  # whisper_asr:
  #   image: onerahmet/openai-whisper-asr-webservice:latest-gpu
  #   container_name: whisper_asr
  #   ports:
  #     - 9000:9000
  #   environment:
  #     ASR_MODEL: base
  #     ASR_ENGINE: openai_whisper
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - capabilities: [gpu]

  # Ollama (AI Service)
  # ollama:
  #   container_name: ollama
  #   image: ollama/ollama
  #   volumes:
  #     - ./docker/ollama:/ollama  # Mount the directory containing entrypoint.sh
  #   ports:
  #     - 11434:11434
  #   entrypoint: ["/ollama/entrypoint.sh"]  # Specify the entrypoint script
  #   deploy:
  #     resources:
  #       reservations:
  #         devices:
  #           - capabilities: [gpu]
